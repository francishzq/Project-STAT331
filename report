---
title: "STAT 331 Project"
author: "Zhuoqun Han (Francis); Catherine Wang"
date: "`r format(Sys.Date(), format = '%B %d, %Y')`"
fontsize: 12pt
link-citations: yes
linkcolor: blue
output: 
   pdf_document:
     number_sections: TRUE
---

\newcommand{\var}{\mathrm{var}}

# Summary

# Model Selection
## Deal with NA's in fht, fwt and income:
To begin with, we had a look at the summary of the dataset(see \ref{summary}). It is obvious that father's height (fht), father's weight (fwt) and the family yearly income (income) contain "too many" NA's. It implies that if we include any of these three factors into our models, then it is probable that our models will be highly biased because there are too many unavailable data and we do not know why they are unavailable; as a result, any model including any of these three factors will not be representative of the *entire population*. Therefore, based on the given dataset, it is reasonable to remove these three variables (see \ref{NA}). After removing these three variables, we counted how many observations have NA's (see \ref{countNA}). It turned out that there were only 119 observations containing NA's, which account for less than 10% of the entire dataset.

## Creating the New Variable smoke_number:
We noticed that the three variables indicating 1) whether the mother smoked during pregnancy (*smoke*); 2) time since the mother quit smoking before pregnancy (*time*); 3) number of cigarettes smoked per day by the mother when she was smoking (*number*) are highly correlated with each other and are divided into too many categories. Therefore, we decided to create a new variable that could store all information from these three variables so that after we fit the models, we will get more meaningful coefficients. 

First, we regrouped the variable *number* into four categories: never smoked, up to half a pack, half to full pack, and more than one pack (see \ref{number}). Then, we regrouped the variable *smoke* in terms of the variable *time* so that the variable *smoke* can store information from both the original *smoke* and *time* (see \ref{smoketime}). After this, we realized that in total, there are 21 NA's in smoke and number. Thus, we removed the observations that have NA's in smoke and number (see \ref{removesmokenumber}). At the end, we created a new variable named *smoke_number* which indicates when the mother quit smoking and how many cigarettes the mother smoked when she was smoking (see \ref{smoke_number}), where we created new categories: Never smoked, Smoked more than half and pack but quit before pregnancy, Smoke more than half a pack but quit during pregnancy, Smoked up to half a pack but quit before pregnancy, Still smokes half to full pack, Still smokes more than one pack, and Still smokes up to half a pack. And now that we have a new variable, we could throw out the original *smoke*, *time* and *number* (see \ref{smoketimenumber}). 

## Create the New Variable: BMI
We realized that Body Mass Index (BMI) combines information mother's height(mht) and mother's weight(mwt), and is a better representation of the mother's health status than just height and weight separately (see \ref{BMI}). After this, we removed the original variables mht and mwt (see \ref{removemhtmwt}).

## Imputing the Variables mother's ethnicity (meth) and father's ethnicity(feth)
First we realized that there are subcategories in each variable that account for a very small portion of the entire observations, such as the subcategories *mixed* and *other*. Therefore, we decided to combine them to a new variable *other* for each of meth and feth (see \ref{othermixed}). After this, we realized that there are NA's in both feth and meth; besides, we checked that the majority of parents have the same ethnicity (see \ref{countethnicity}). Plus, there is only a small number of observations that have NA's in meth and feth. Hence, for the missing NA's in meth and feth, it is reasonable to replace them with the corresponding ethnicity of the other parent (see \ref{ethNA}). 

## Factor all Categorical Variables
We converted all categorical variables into factors. (see \ref{factor}).

## Deal with observations that contain NA's
At this point, we noted that there are still NA's in some observations. As mentioned in Section 1.1, totally there were only 119 observations containig NA's. Since they account for less than 10% of the dataset, it is acceptable to remove them from the dataset without creating much biase (see \ref{removeNA}). 

# Model Diagnostics

# Discussion 

\appendix

# R code

## Summary of the dataset {#summary}
```{r}
getwd() # make sure that the file is in the working directory

# load the data as a data.frame
birth <- read.csv(file = "chds_births.csv")

# summary of data
summary(birth)
```

## {#NA}
```{r}
# throw out fht, fwt and income
birth <- birth[,-c(12, 13, 15)]
```

## Check how many observations contain NA's {#countNA}
```{r}
n <- length(birth$wt) # number of rows
count <- 0 # initialize count of rows with at least one NA
for (ii in 1:n) {
  if(sum(is.na(birth[ii,])) >= 1) {
    count = count + 1
  }
}
total_NA_rows <- count
total_NA_rows
```

## Regroup the variable number {#number}
```{r}
# create new descriptive groups for number of cigarettes smoked per day

num2 <- birth$number
# new categories for variable number
numnames <- c("never smoked", "up to half a pack", "half to full pack", "more than one pack")

for(ii in 0:9) {
  if(ii==0) {
    num2[num2 == ii] <- numnames[1]
  } 
  if(0 < ii & ii <= 2) {
    num2[num2 == ii] <- numnames[2]
  } 
  if(2 < ii & ii <= 4) {
    num2[num2 == ii] <- numnames[3]
  } else {
    num2[num2 == ii] <- numnames[4]
  }
}

birth$number <- num2 # replace in dataset
```

## Regroup the variable smoke in terms of time {#smoketime}
```{r}
# combine smoke and time into a single variable smoke (relabelling smoke):
# create categories for new variables
newnames <- c("Never Smoked", "Still Smokes",
              "Smoked but quit during pregnancy", 
              "Smoked but quit before pregnancy")

# extract the corresponding columns
smoke <- birth$smoke

n <- length(smoke) # number of observations
newsmoke <- rep(NA, n)

for (ii in 1:n) {
  if (is.na(smoke[ii])) {
    newsmoke[ii] <- NA
  }
  else {
    for (jj in 0:3) {
      if (smoke[ii] == jj) {
        newsmoke[ii] <- newnames[jj+1]
      }
    }
  }
}
birth$smoke <- newsmoke
```

## Remove observations containing NA's in smoke and number {#removesmokenumber}
```{r}
# locate the observations that have NA's in smoke
ind_smoke <- NA
for (ii in 1:length(birth$smoke)) {
  if (is.na(birth$smoke[ii])) {
    ind_smoke <- c(ind_smoke, ii)
  }
}
ind_smoke <- ind_smoke[2:length(ind_smoke)]

# locate the observations that have NA's in number
ind_number <- NA
for (ii in 1:length(birth$number)) {
  if (is.na(birth$number[ii])) {
    ind_number <- c(ind_number, ii)
  }
}
ind_number <- ind_number[2:length(ind_number)]

# Throw out the observations that have NA's in smoke and number
# note that observations that have NA's in smoke also have NA's in number
remove_smoke <- ind_number
birth <- birth[-remove_smoke,]
```

## Create the new variable smoke_number {#smoke_number}
```{r}
# create a new variable to combine smoke and number
# note that nobody is in the category "Smoked up to half a pack but quit during pregnancy"

smoke_number <- birth$smoke
for (ii in 1:(length(birth$smoke))) {
  if (smoke_number[ii] != "Never Smoked") {
    if (birth$number[ii] == "up to half a pack") {
      if (smoke_number[ii] == "Smoked but quit before pregnancy") {
        smoke_number[ii] <- "Smoked up to half a pack but quit before pregnancy"
      }
      else {smoke_number[ii] <- "Still smokes up to half a pack"}
    }
    else if (birth$number[ii] == "half to full pack") {
      if (smoke_number[ii] == "Smoked but quit before pregnancy") {
        smoke_number[ii] <- "Smoked more than half a pack but quit before pregnancy"
      }
      else if (smoke_number[ii] == "Smoked but quit during pregnancy") {
        smoke_number[ii] <- "Smoked more than half a pack but quit during pregnancy"
      }
      else {smoke_number[ii] <- "Still smokes half to full pack"}
    }
    else {
      if (smoke_number[ii] == "Smoked but quit before pregnancy") {
        smoke_number[ii] <- "Smoked more than half a pack but quit before pregnancy"
      }
      else if (smoke_number[ii] == "Smoked but quit during pregnancy") {
        smoke_number[ii] <- "Smoked more than half a pack but quit during pregnancy"
      }
      else {smoke_number[ii] <- "Still smokes more than one pack"}
    }
  }
}

# factor the new variable smoke_number
birth$smoke_number <- factor(smoke_number)
```

## Remove the original smoke, time and number {#smoketimenumber}
```{r}
# Remove the original smoke, time and number
birth <- birth[,-c(13, 14, 15)]
```

## BMI {#BMI}
```{r}
# Combine mht and mwt to create a new variable BMI
# BMI is called Body Mass Index, which is calculated by weight in kg / height^2 in m
# Convert mht and mwt to standard metric
lbs_to_kg <- 0.453592
birth$mwt <- lbs_to_kg * birth$mwt
inch_to_meter <- 0.0254
birth$mht <- inch_to_meter * birth$mht

# Create BMI variable
mht <- birth$mht
mwt <- birth$mwt
BMI <- mwt / mht^2
birth$BMI <- BMI
```

## {#removemhtmwt}
```{r}
# throw out mht and mwt
birth <- birth[,-c(7, 8)]
```

## {#othermixed}
```{r}
# Combine other and mixed in feth and call it other
for (ii in 1:length(birth$feth)) {
  if (!is.na(birth$feth[ii])) {
    if(birth$feth[ii] == 10) {
      birth$feth[ii] <- 9
    }
  }
}

# Combine other and mixed in meth and call it other
for (ii in 1:length(birth$meth)) {
  if (!is.na(birth$meth[ii])) {
    if(birth$meth[ii] == 10) {
      birth$meth[ii] <- 9
    }
  }
}

```

## {#countethnicity}
```{r}
# Want to count how many rows have meth=feth
count.eth <- 0
for (ii in 1:length(birth$meth)) {
  if ((is.na(birth$feth[ii])==FALSE) & is.na(birth$meth[ii])==FALSE){
    if (birth$meth[ii]<=5) {
      if (birth$feth[ii]<=5){
        count.eth <- count.eth+1
      }
    }
    else {
      if (birth$meth[ii]==birth$feth[ii]){
        count.eth <- count.eth+1
      }
    }
  }
}
count.eth
```

## Imputing meth and feth {#ethNA}
```{r}
# we assume fathers and mothers have the same ethnicity background
# based on the majority of the dataset
# deal with the NA's in meth
for (ii in 1:length(birth$meth)) {
  if(is.na(birth$meth)[ii]) {
    birth$meth[ii] <- birth$feth[ii]
  }
}

# deal with the NA's in feth
for (ii in 1:length(birth$feth)) {
  if(is.na(birth$feth)[ii]) {
    birth$feth[ii] <- birth$meth[ii]
  }
}
```

## {#factor}
```{r}
# convert categorical variables to factors

# convert meth to non-numeric categorical variable
meth2 <- birth$meth
length(meth2)
# "levels" of variable meth
methnames <- c("Caucasian","Mexican", "African-American","Asian", "Other")
# assign "Caucasian" level to values less than or equal to 5
# otherwise assign levels based on order in methnames vector
for(ii in 0:9) {
  if(ii<=5){
    meth2[meth2 == ii] <- "Caucasian"
  } else {
    meth2[meth2 == ii] <- methnames[ii-4]
  }
}
meth2 <- factor(meth2, levels = methnames) # order levels based on methnames
levels(meth2)
birth$meth <- meth2 # replace in dataset
############################################
# convert med to categorical variables
med2 <- birth$med
# "levels" of variable med
mednames <- c("elementary school", "middle school", "high school", "high school + trade", "high school + some college", "college grad", "trade school", "high school unclear")
med2 <- mednames[birth$med+1]
med2 <- factor(med2, levels = mednames) # order levels based on mednames
levels(med2)
birth$med <- med2 # replace in dataset
##########################################
# convert feth to categorical variables
feth2 <- birth$feth
# "levels" of variable feth
fethnames <- c("Caucasian","Mexican", "African-American","Asian", "Other")
# assign "Caucasian" level to values less than or equal to 5
# otherwise assign levels based on order in fethnames vector
for(ii in 0:9) {
  if(ii<=5){
    feth2[feth2 == ii] <- "Caucasian"
  } else {
    feth2[feth2 == ii] <- fethnames[ii-4]
  }
}
feth2 <- factor(feth2, levels = fethnames) # order levels based on methnames
levels(feth2)
birth$feth <- feth2 # replace in dataset
############################################
# convert fed to categorical variables
fed2 <- birth$fed
# "levels" of variable fed
fednames <- c("elementary school", "middle school", "high school", "high school + trade", "high school + some college", "college grad", "trade school", "high school unclear")
fed2 <- fednames[birth$fed+1]
fed2 <- factor(fed2, levels = fednames) # order levels based on fednames
levels(fed2)
birth$fed <- fed2 # replace in dataset

################################################################################
# marital
marital <- birth$marital
maritalnames <- c("married", "legally separated", "divorced", "widowed",
                  "never married") # new values
# encode the factor
marital2 <- rep(NA, length(marital))
for (ii in 1:5) {
  marital2[marital == ii] <- maritalnames[ii]
}
marital2 <- factor(marital2, levels = maritalnames)
birth$marital <- marital2
######################################################################
```

## {#removeNA}
```{r}
# locate the observations that have NA's in gestation
ind_gestation <- NA
for (ii in 1:length(birth$gestation)) {
  if (is.na(birth$gestation[ii])) {
    ind_gestation <- c(ind_gestation, ii)
  }
}
ind_gestation <- ind_gestation[2:length(ind_gestation)]

# locate the observations that have NA's in mage
ind_mage <- NA
for (ii in 1:length(birth$mage)) {
  if (is.na(birth$mage[ii])) {
    ind_mage <- c(ind_mage, ii)
  }
}
ind_mage <- ind_mage[2:length(ind_mage)]

# locate the observations that have NA's in med
ind_med <- NA
for (ii in 1:length(birth$med)) {
  if (is.na(birth$med[ii])) {
    ind_med <- c(ind_med, ii)
  }
}
ind_med <- ind_med[2:length(ind_med)]

# locate the observations that have NA's in fage
ind_fage <- NA
for (ii in 1:length(birth$fage)) {
  if (is.na(birth$fage[ii])) {
    ind_fage <- c(ind_fage, ii)
  }
}
ind_fage <- ind_fage[2:length(ind_fage)]

# locate the observations that have NA's in fed
ind_fed <- NA
for (ii in 1:length(birth$fed)) {
  if (is.na(birth$fed[ii])) {
    ind_fed <- c(ind_fed, ii)
  }
}
ind_fed <- ind_fed[2:length(ind_fed)]

# locate the observations that have NA's in marital
ind_marital <- NA
for (ii in 1:length(birth$marital)) {
  if (is.na(birth$marital[ii])) {
    ind_marital <- c(ind_marital, ii)
  }
}
ind_marital <- ind_marital[2:length(ind_marital)]


# locate the observations that have NA's in BMI
ind_BMI <- NA
for (ii in 1:length(birth$BMI)) {
  if (is.na(birth$BMI[ii])) {
    ind_BMI <- c(ind_BMI, ii)
  }
}
ind_BMI <- ind_BMI[2:length(ind_BMI)]

missing <- c(ind_gestation, ind_mage, ind_BMI, ind_marital, ind_fage, ind_fed, ind_med)
missing

# remove missing observations

# first remove duplicated numbers in the missing list
m <- length(missing)
new_missing <- NA
for (ii in 1:m) {
  if (missing[ii] %in% new_missing == FALSE) {
    new_missing <- c(new_missing, missing[ii])
  }
}
new_missing <- new_missing[2:length(new_missing)]

# display the indexes of all observations with NA's
new_missing

# remove observations containing NA's
birth <- birth[-new_missing,]
```

